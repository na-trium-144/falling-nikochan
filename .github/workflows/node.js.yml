name: Node.js CI
on:
  pull_request:
    branches: [ "main" ]
    
jobs:
  check-lockfile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - run: bun i
    - run: npm i
    - name: Abort if lockfile changed
      run: '[ -z "$(git status -s)" ]'

  lint: # uses node
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint

  test: # uses bun
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: mongodb://localhost:27017
      API_ENV: development
      # API_NO_RATELIMIT: "1"
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
    - run: bun i --frozen-lock
    - run: bun mongo-docker
    - run: bun route:test

  vercel-build: # uses bun
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
    - name: Pull Vercel Environment Information
      run: bunx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - name: Build Project Artifacts
      run: bunx vercel build --token=${{ secrets.VERCEL_TOKEN }}
    - name: Upload .vercel/output
      uses: actions/upload-artifact@v4
      with:
        name: vercel-output
        path: .vercel/output
        include-hidden-files: true

  vercel-deploy:
    needs: [check-lockfile, lint, test, vercel-build]
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
    # .vercel/output と、それとは別に node_modules も必要
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
    - run: bun i --frozen-lockfile
    - name: Pull Vercel Environment Information
      run: bunx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - name: Download .vercel/output
      uses: actions/download-artifact@v4
      with:
        name: vercel-output
        path: .vercel/output
    - name: Deploy Project Artifacts to Vercel
      run: bunx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
